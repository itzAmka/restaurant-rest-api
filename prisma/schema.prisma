generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PaymentStatus {
  PAID
  UNPAID
  REFUNDED
}

enum OrderStatus {
  PROCESSING
  COMPLETED
  CANCELLED
  PICKED_UP
}

enum AdminRole {
  SUPER_ADMIN // Overall system administration and management.
  ADMIN // Day-to-day administration tasks.
  MANAGER // Manage staff and customers.
  STAFF // Manage orders and customers.
}

model Admin {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  password String
  role     AdminRole

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

model Customer {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique
  phone String

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  order Order[]
}

model Order {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  customerId    String        @db.ObjectId
  PickupTime    String
  total         Float
  orderDate     DateTime      @default(now()) @db.Date
  paymentStatus PaymentStatus
  orderStatus   OrderStatus

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  orderItem OrderItem[]

  customer Customer @relation(fields: [customerId], references: [id])
}

model Menu {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  description String
  price       String
  categoryId  String @db.ObjectId

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  orderItem OrderItem[]
  category  Category    @relation(fields: [categoryId], references: [id])
}

model Category {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  description String

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  menu Menu[]
}

model OrderItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  orderId  String @db.ObjectId
  menuId   String @db.ObjectId
  quantity Int

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  order Order @relation(fields: [orderId], references: [id])
  menu  Menu  @relation(fields: [menuId], references: [id])
}
