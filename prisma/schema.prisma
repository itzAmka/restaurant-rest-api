generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PaymentStatus {
  PAID
  UNPAID
  REFUNDED
}

enum OrderStatus {
  PROCESSING
  COMPLETED
  CANCELLED
  PICKED_UP
}

model Admin {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

model Customer {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique
  phone String

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  Order Order[]
}

model Order {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  customerId    String        @db.ObjectId
  PickupTime    String
  total         Float
  orderDate     DateTime      @default(now()) @db.Date
  paymentStatus PaymentStatus
  orderStatus   OrderStatus

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  OrderItem OrderItem[]

  customer Customer @relation(fields: [customerId], references: [id])
}

model MenuItem {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  description String
  price       Float

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  OrderItem OrderItem[]
}

model OrderItem {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  orderId    String @db.ObjectId
  menuItemId String @db.ObjectId
  quantity   Int

  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date

  order    Order    @relation(fields: [orderId], references: [id])
  menuItem MenuItem @relation(fields: [menuItemId], references: [id])
}
